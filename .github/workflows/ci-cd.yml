name: Budget-Tracker

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      NEXT_PUBLIC_CLERK_SIGN_UP_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
      NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
      NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL }}
      NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.9.0'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Run lint
        run: npm run lint

      - name: Run format check
        run: npm run format

      - name: Verify Commit Message
        run: npx commitlint --from=HEAD~1 --to=HEAD --verbose

      - name: Create .env file for Docker
        run: |
          cat <<EOF > .env
          PORT=4000
          DATABASE_URL=${DATABASE_URL}
          DIRECT_URL=${DIRECT_URL}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
          CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
          NEXT_PUBLIC_CLERK_SIGN_UP_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_URL}
          NEXT_PUBLIC_CLERK_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_URL}
          NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL}
          NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL}
          EOF

      - name: Build Docker Image
        run: docker build --build-arg DATABASE_URL=${DATABASE_URL} --build-arg DIRECT_URL=${DIRECT_URL} --build-arg NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY} --build-arg CLERK_SECRET_KEY=${CLERK_SECRET_KEY} --build-arg NEXT_PUBLIC_CLERK_SIGN_UP_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_URL} --build-arg NEXT_PUBLIC_CLERK_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_URL} --build-arg NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_FALLBACK_REDIRECT_URL} --build-arg NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_FALLBACK_REDIRECT_URL} -t budget-tracker-app:1.0 .

  deploy:
    name: Deploy to Heroku
    needs: build-and-test
    if: (github.ref == 'refs/heads/main' && github.event_name =='push') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.9.0'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build Docker Image
        run: docker-compose up --build -d

      - name: Log in to the Heroku Container Registery
        run: heroku container:login
        env:
          HEROKU_API_KEY: $ {{ secrets.HEROKU_API_KEY }}

      - name: Tag and Push Docker Image to Herou
        run: docker tag budget-tracker-app:1.0 registry.heroku.com/budget-tracker-app/web
          docker push registery.heroku.com/budget-tracker-app/web
        env:
          HEROKU_API_KEY: $ {{ secrets.HEROKU_API_KEY }}

      - name: Release the Image to Heroku
        run: heroku container:release web -a budget-tracker-app
        env:
          HEROKU_API_KEY: $ {{ secrets.HEROKU_API_KEY }}
